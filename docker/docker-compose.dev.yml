version: '3.9'
services:
    server:
        build:
            context: ../.
            dockerfile: docker/server/Dockerfile.dev
        image: elastic-movies_server
        container_name: elastic-movies_server
        ports:
            - '80:80' # Connect localhost 80 port to container 80 port
        links: # Link services to access http://app and http://api inside the container
            - api:api
            - app:app
        depends_on:
            - api
            - app

    app:
        build:
            context: ../.
            dockerfile: docker/app/Dockerfile.dev
        image: elastic-movies_app
        container_name: elastic-movies_app
        environment:
            - NODE_ENV=development
        volumes: # For webpack dev server to use our local files
            - ../app:/usr/src/app
        ports:
            - '3000:3000' # For docker to now where to redirect HMR queries

    api:
        build:
            context: ../.
            dockerfile: docker/api/Dockerfile.dev
        image: elastic-movies_api
        container_name: elastic-movies_api
        environment:
            - ES_HOST=http://elasticsearch:9200/
            - TMDB_API_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWE0MzdhNjFhYThkNGUyZDk4NGQ2NzNkMTMyYjkxYiIsInN1YiI6IjVlN2NiODhhNmM3NGI5NTc1N2NhNDYzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CGnvrBJ57Mny5PCFup7zE-NEqNbwB1qQmI2OH61naqI
            - NODE_ENV=development
        volumes:
            - ../api:/usr/src/api
        ports:
            - '8080:8080'
        depends_on:
            - elasticsearch

    worker:
        build:
            context: ../.
            dockerfile: docker/worker/Dockerfile.dev
        image: elastic-movies_worker
        container_name: elastic-movies_worker
        environment:
            - ES_HOST=http://elasticsearch:9200/
            - TMDB_API_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWE0MzdhNjFhYThkNGUyZDk4NGQ2NzNkMTMyYjkxYiIsInN1YiI6IjVlN2NiODhhNmM3NGI5NTc1N2NhNDYzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CGnvrBJ57Mny5PCFup7zE-NEqNbwB1qQmI2OH61naqI
            - NODE_ENV=development
        volumes:
            - ../api:/usr/src/worker
        ports:
            - '9000:9000'
        depends_on:
            - redis
            - elasticsearch
        networks:
            - elastic

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
        container_name: elastic-movies_elasticsearch
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
        volumes:
            - ../elasticsearch/data:/usr/share/elasticsearch/data
        ports:
            - '9200:9200'
        networks:
            - elastic

    es01:
        image: elasticsearch:7.10.1
        container_name: elastic-movies_es_01
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es02,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data01:/usr/share/elasticsearch/data
        expose:
            - 9201
        ports:
            - '9201:9200'
        networks:
            - elastic

    es02:
        image: elasticsearch:7.10.1
        container_name: elastic-movies_es_02
        environment:
            - node.name=es02
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data02:/usr/share/elasticsearch/data
        networks:
            - elastic

    es03:
        image: elasticsearch:7.10.1
        container_name: elastic-movies_es_03
        environment:
            - node.name=es03
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es02
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data03:/usr/share/elasticsearch/data
        networks:
            - elastic

    redis:
        image: redis:latest
        restart: on-failure
        ports:
            - '6379:6379'

volumes:
    data01:
        driver: local
    data02:
        driver: local
    data03:
        driver: local

networks:
    elastic:
        driver: bridge
